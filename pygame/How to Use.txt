To access the model:
TF_MODEL_FILE_PATH = 'model.tflite' # The default path to the saved TensorFlow Lite model

interpreter = tf.lite.Interpreter(model_path=TF_MODEL_FILE_PATH)



Print the signatures from the converted model to obtain the names of the inputs (and outputs):
interpreter.get_signature_list()



Get the classifier:
classify_lite = interpreter.get_signature_runner('') # Input the first key in the dictionary from signature list
classify_lite



How to load Images:
img1 = tf.keras.utils.load_img(
    "Arknights Buy Page 10.png", target_size=(192, 144)
)
img1_array = tf.keras.utils.img_to_array(img1)

img2 = tf.keras.utils.load_img(
    "Tower of Fantasy Gameplay 12.png", target_size=(192, 144)
)
img2_array = tf.keras.utils.img_to_array(img2)

img_pair = []
img_pair += [[img1_array, img2_array]]
img_pair = np.array(img_pair)



Predict on Images:
predictions_lite = classify_lite(sequential_1_input=img_pair)['outputs']
score_lite = tf.nn.softmax(predictions_lite)

assert np.allclose(predictions, predictions_lite)

print(
    "This image most likely belongs to {} with a {:.2f} percent confidence."
    .format(class_names[np.argmax(score_lite)], 100 * np.max(score_lite))
)